{"version":3,"sources":["components/Highlight/Highlight.module.css","components/CountrySelector/CountrySelector.js","components/Highlight/Highlight.js","components/Chart/Chart.js","App.js","components/apis/API.js","reportWebVitals.js","index.js"],"names":["module","exports","Option","Select","Text","Typography","CountrySelector","countries","handleOnChange","style","margin","justify","xl","xs","type","defaultValue","display","onChange","map","country","className","value","Slug","Country","ISO2","cardStyle","confirmed","paddingTop","borderLeft","maxHight","recovered","death","Highlight","summary","gutter","data","bodyStyle","title","strong","fontSize","end","count","separator","duration","Chart","report","useState","optionsData","setOptionsData","reportType","setReportType","chartData","setChartData","useEffect","slice","Math","max","length","comfirmed","date","moment","Date","format","Confirmed","lineName","Recovered","Deaths","concat","config","height","xField","yField","seriesField","legend","position","label","fill","smooth","color","justifyContent","Group","e","target","Button","locale","App","setCountries","countrySelectedID","setCountrySelectedID","covidReport","setCovidReport","a","axios","get","sortBy","fetchData","slug","utc","pop","getReport","console","log","lastData","level","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.194d89a3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"confirmed\":\"Highlight_confirmed__387dm\",\"recovered\":\"Highlight_recovered__-behj\",\"death\":\"Highlight_death__E3lRW\"};","import React from \"react\";\r\nimport {  Select, Row, Col, Typography } from \"antd\";\r\nimport './CountrySelector.css'\r\n\r\nconst { Option } = Select;\r\nconst { Text } = Typography;\r\n\r\nexport const CountrySelector = ({ countries, handleOnChange }) => {\r\n\r\n  return (\r\n    <div style={{margin: '16px 0'}}>\r\n      <Row justify=\"start\">\r\n        <Col xl={6} xs={24}>\r\n          <Text type='secondary' >Quốc Gia:</Text>\r\n          <Select defaultValue=\"Viet Nam\" style={{ display: \"block\" }} onChange={handleOnChange}>\r\n            {countries.map((country) => (\r\n              <Option className='' value={country.Slug} key={country.ISO2}>{country.Country}</Option>\r\n            ))}\r\n          </Select>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import { Row } from \"antd\";\r\nimport { Col } from \"antd\";\r\nimport { Card, Typography } from \"antd\";\r\nimport React from \"react\";\r\nimport Classes from \"./Highlight.module.css\";\r\nimport CountUp from 'react-countup';\r\n\r\nconst { Text } = Typography;\r\n\r\nconst cardStyle = {\r\n  confirmed: {\r\n    paddingTop: \"5px\",\r\n    borderLeft: \"10px solid #c9302c\",\r\n    maxHight: '50px'\r\n  },\r\n  recovered: {\r\n    paddingTop: \"5px\",\r\n    borderLeft: \"10px solid #28a745\",\r\n  },\r\n  death: {\r\n    paddingTop: \"5px\",\r\n    borderLeft: \"10px solid grey\",\r\n  },\r\n};\r\n\r\nexport const Highlight = ({ summary }) => {\r\n  return (\r\n    <div>\r\n      <Row gutter={32}>\r\n        {summary.map((data) => (\r\n          <Col xl={8} xs={24}>\r\n            <Card bodyStyle={cardStyle[data.type]}>\r\n              <Text style={{ display: \"block\" }}>{data.title}</Text>\r\n              <Text strong style={{fontSize: 16}} >\r\n                <CountUp end={data.count} separator=\" \" duration={2} />\r\n              </Text>\r\n            </Card>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Line } from \"@ant-design/charts\";\r\nimport moment from \"moment\";\r\nimport { Radio, Button } from \"antd\";\r\n\r\nexport const Chart = ({ report }) => {\r\n  const [optionsData, setOptionsData] = useState([]);\r\n  const [reportType, setReportType] = useState(\"all\");\r\n  const [chartData, setChartData] = useState([]);\r\n\r\n  const handleReportType = (e) => {\r\n    setReportType(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    switch (reportType) {\r\n      case \"all\":\r\n        setOptionsData(report);\r\n        break;\r\n      case \"30\":\r\n        setOptionsData(report.slice(Math.max(report.length - 30, 1)));\r\n        break;\r\n      case \"7\":\r\n        setOptionsData(report.slice(Math.max(report.length - 7, 1)));\r\n        break;\r\n      default:\r\n        setOptionsData(report);\r\n        break;\r\n    }\r\n  }, [reportType, report]);\r\n\r\n  useEffect(() => {\r\n    const comfirmed = optionsData.map((data) => ({\r\n      date: moment(data.Date).format(\"DD/MM/YYYY\"),\r\n      value: data.Confirmed,\r\n      lineName: \"Số ca nhiễm\",\r\n    }));\r\n    const recovered = optionsData.map((data) => ({\r\n      date: moment(data.Date).format(\"DD/MM/YYYY\"),\r\n      value: data.Recovered,\r\n      lineName: \"Khỏi\",\r\n    }));\r\n    const death = optionsData.map((data) => ({\r\n      date: moment(data.Date).format(\"DD/MM/YYYY\"),\r\n      value: data.Deaths,\r\n      lineName: \"Tử vong\",\r\n    }));\r\n\r\n    setChartData(comfirmed.concat(recovered, death));\r\n  }, [optionsData]);\r\n\r\n  const config = {\r\n    data: chartData,\r\n    height: 350,\r\n    xField: \"date\",\r\n    yField: \"value\",\r\n    seriesField: \"lineName\",\r\n    legend: { position: \"top\" },\r\n    label: {\r\n      style: {\r\n        fill: \"#aaa\",\r\n      },\r\n    },\r\n    smooth: true,\r\n    //     animation: {\r\n    //       appear: {\r\n    //         animation: \"path-in\",\r\n    //         duration: 5000,\r\n    //       },\r\n    //       update: {\r\n    //         animation: \"path-in\",\r\n    //         duration: 2000,\r\n    //       },\r\n    //     },\r\n    color: [\"#c9302c\", \"#28a745\", \"grey\"],\r\n  };\r\n\r\n  return (\r\n    <div >\r\n      <div style={{ margin: \"16px 0 0\", display: 'flex', justifyContent: 'center' }}>\r\n        <Radio.Group onChange={handleReportType}>\r\n          <Radio.Button value=\"all\">TẤT CẢ</Radio.Button>\r\n          <Radio.Button value=\"30\">30 NGÀY</Radio.Button>\r\n          <Radio.Button value=\"7\">7 NGÀY</Radio.Button>\r\n        </Radio.Group>\r\n      </div>\r\n\r\n      <Line {...config} />\r\n    </div>\r\n  );\r\n};\r\n","import \"./App.css\";\nimport moment from \"moment\";\nimport \"moment/locale/vi\";\nimport Title from \"antd/lib/typography/Title\";\nimport { Typography } from \"antd\";\nimport \"antd/dist/antd.css\";\nimport { CountrySelector } from \"./components/CountrySelector/CountrySelector\";\nimport { useEffect, useState } from \"react\";\nimport { getCountries, getReportByCountry } from \"./components/apis/API\";\nimport { sortBy } from \"lodash\";\nimport { Highlight } from \"./components/Highlight/Highlight\";\nimport { Chart } from \"./components/Chart/Chart\";\n\nconst { Text } = Typography;\nmoment.locale(\"vi\");\n\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [countrySelectedID, setCountrySelectedID] = useState(\"vietnam\");\n  const [covidReport, setCovidReport] = useState([]);\n\n  const handleOnChange = (e) => {\n    setCountrySelectedID(e);\n  };\n\n  useEffect(() => {\n    // getCountries().then((res) => setCountries(res.data));\n    // console.log(countries);\n    const fetchData = async () => {\n      const data = await getCountries();\n      setCountries(sortBy(data.data, \"Country\"));\n    };\n\n    fetchData();\n  }, []);\n\n  useEffect(() => {\n    const getReport = async () => {\n      const data = await getReportByCountry(countrySelectedID);\n      data.data.pop();\n      setCovidReport(data.data);\n    };\n    getReport();\n  }, [countrySelectedID]);\n  \n  let summary =[];\n  if (covidReport.length) {\n    console.log(\"report\", covidReport);\n    const lastData = covidReport[covidReport.length - 1];\n    console.log('lastdata',lastData);\n    summary = [\n      {\n        title: \"Số ca nhiễm\",\n        count: lastData.Confirmed,\n        type: \"confirmed\",\n      },\n      {\n        title: \"Khỏi\",\n        count: lastData.Recovered,\n        type: \"recovered\",\n      },\n      {\n        title: \"Tử vong\",\n        count: lastData.Deaths,\n        type: \"death\",\n      },\n    ];\n  }\n\n  return (\n    <div className=\"wrapper\">\n      <div className=\"header\">\n        <Title>Số liệu Covid-19</Title>\n        <Text type='secondary' level={4}>{moment().format(\"LLL\")}</Text>\n      </div>\n      <CountrySelector countries={countries} handleOnChange={handleOnChange} />\n      <Highlight summary={summary} />\n      <Chart report={covidReport} />\n    </div>\n  );\n}\n\nexport default App;\n","import axios from 'axios';\r\nimport moment from 'moment';\r\n\r\nexport const getCountries = () =>\r\n  axios.get('https://api.covid19api.com/countries');\r\n\r\nexport const getReportByCountry = (slug) =>\r\n  axios.get(\r\n    `https://api.covid19api.com/dayone/country/${slug}?from=2021-01-01T00:00:00&to=${moment()\r\n      .utc(0)\r\n      .format()}`\r\n  );\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}